---
import { ui } from "../i18n/ui.js";

interface Props {
  svg: {
    id: string;
    name: string;
    code: string;
    prompt?: string;
    tags?: string;
  };
  locale?: 'en' | 'fr';
}

const { svg, locale = 'en' } = Astro.props;

// Extraire le vrai prompt (premier message de l'utilisateur)
let displayPrompt = '';
if (svg.prompt) {
  try {
    const history = JSON.parse(svg.prompt);
    if (Array.isArray(history) && history.length > 0) {
      // Trouver le premier message de l'utilisateur
      const firstUserMessage = history.find((msg: any) => msg.role === 'user');
      displayPrompt = firstUserMessage?.content || svg.prompt;
    } else {
      displayPrompt = svg.prompt;
    }
  } catch (e) {
    // Si ce n'est pas du JSON, utiliser le prompt tel quel
    displayPrompt = svg.prompt;
  }
}
---

<div 
  class="card bg-base-100 shadow-lg hover:shadow-xl transition-all duration-300 border border-base-300" 
  data-svg-id={svg.id}
  data-name={svg.name}
  data-tags={svg.tags || ''}
>
  <div class="card-body p-4">
    <div class="flex justify-between items-start mb-3">
      <h3 class="card-title text-lg font-semibold truncate flex-1" title={svg.name}>
        {svg.name}
      </h3>
      <button 
        class="btn btn-ghost btn-xs btn-circle" 
        onclick={`openTagModal('${svg.id}', '${svg.name}', '${svg.tags || ''}')`}
        title={ui[locale].gallery.manageTags}
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
        </svg>
      </button>
    </div>

    <!-- Tags -->
    {svg.tags && svg.tags.length > 0 && (
      <div class="flex flex-wrap gap-1 mb-2">
        {svg.tags.split(',').map((tag: string) => (
          tag.trim() && (
            <span class="badge badge-sm badge-primary">{tag.trim()}</span>
          )
        ))}
      </div>
    )}
    
    <div class="bg-base-200 rounded-lg p-4 flex items-center justify-center h-48 overflow-hidden">
      <div class="max-w-full max-h-full flex items-center justify-center">
        <div 
          set:html={svg.code} 
          class="svg-container"
          style="max-width: 100%; max-height: 100%; width: auto; height: auto;"
        />
      </div>
    </div>
    
    {displayPrompt && (
      <p class="text-xs text-base-content/60 mt-2 line-clamp-2" title={displayPrompt}>
        <span class="font-medium">Prompt:</span> {displayPrompt}
      </p>
    )}
    
    <div class="card-actions justify-between mt-4 gap-2">
      <a 
        href={`/gallery/${svg.id}`}
        class="btn btn-primary btn-sm gap-1"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
        </svg>
        {ui[locale].gallery.editButton}
      </a>
      
      <div class="flex gap-2">
        <button 
          class="btn btn-ghost btn-sm btn-square" 
          onclick={`copySVGCode('${svg.id}', \`${svg.code.replace(/`/g, '\\`')}\`)`}
          title={ui[locale].gallery.copyButton}
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
          </svg>
        </button>
        <button 
          class="btn btn-ghost btn-sm btn-square text-error" 
          onclick={`deleteSVGItem('${svg.id}')`}
          title={ui[locale].gallery.deleteButton}
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  .svg-container :global(svg) {
    max-width: 100% !important;
    max-height: 100% !important;
    width: auto !important;
    height: auto !important;
    display: block;
    margin: 0 auto;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
